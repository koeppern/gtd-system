# GTD Backend Environment Configuration
# Copy this file to .env and adjust the values for your environment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database URL (if using PostgreSQL directly)
# Format: postgresql+asyncpg://username:password@hostname:port/database_name
POSTGRES_URL="postgresql+asyncpg://gtd_user:gtd_password@localhost:5432/gtd_db"

# Supabase Configuration (if using Supabase)
SUPABASE_URL="https://your-project-id.supabase.co"
SUPABASE_SERVICE_ROLE_KEY="your-service-role-key-here"
SUPABASE_ANON_KEY="your-anon-key-here"

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Secret key for JWT tokens (MUST be at least 32 characters)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY="your-super-secret-key-at-least-32-characters-long"

# JWT Algorithm
ALGORITHM="HS256"

# Token expiration in minutes
ACCESS_TOKEN_EXPIRE_MINUTES=60

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application environment (development, staging, production)
ENVIRONMENT="development"

# Debug mode (true/false)
DEBUG="true"

# Application host and port
HOST="0.0.0.0"
PORT="8000"

# Config file path (relative to app directory)
CONFIG_FILE="config.yaml"

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Allowed origins (comma-separated for multiple origins)
CORS_ORIGINS="http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173"

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# PostgreSQL for Docker Compose
POSTGRES_PASSWORD="gtd_password_change_me"
POSTGRES_USER="gtd_user"
POSTGRES_DB="gtd_db"

# Docker registry for Kubernetes deployment
DOCKER_REGISTRY="your-registry.com"

# =============================================================================
# KUBERNETES CONFIGURATION
# =============================================================================

# Kubectl context for deployment
KUBECTL_CONTEXT="your-cluster-context"

# Application domain for ingress
APP_DOMAIN="gtd-api.your-domain.com"

# =============================================================================
# OPTIONAL FEATURES
# =============================================================================

# Redis URL (if using Redis for caching)
REDIS_URL="redis://localhost:6379/0"

# Email configuration (if using email notifications)
SMTP_SERVER="smtp.gmail.com"
SMTP_PORT="587"
SMTP_USERNAME="your-email@gmail.com"
SMTP_PASSWORD="your-app-password"

# Monitoring and logging
LOG_LEVEL="INFO"
SENTRY_DSN=""  # For error tracking

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Auto-reload on code changes (development only)
RELOAD="true"

# Number of worker processes
WORKERS="1"

# Enable API documentation endpoints
ENABLE_DOCS="true"